[General Setup]

    save_path = ./
    input_features = wt_percent_Cu,wt_percent_Ni,wt_percent_Mn,wt_percent_P,wt_percent_Si,wt_percent_C,temperature_C,flux_n_cm2_sec,fluence_n_cm2,product_id
    target_feature = delta_sigma_y_MPa
    grouping_feature = Alloy
    labeling_features = Alloy, fluence_n_cm2, product_id
    normalize_features = False
    #target_error_feature = ??? only for atr2...

#[CSV Setup]
#    setup_class = mongo_data.DBTT.DBTTData
#    save_path = ../exports
#    import_path = ../imports_201704

[Data Setup]

    [[Initial]]
    data_path = ../exports/expt_ivar.csv
    weights = False
    
    [[Expt IVAR]]
    data_path = ../exports/expt_ivar.csv
    weights = False #haven't tested weighting; may move

[Models and Tests to Run]

    models = custom_model
    test_cases = SingleFitGrouped_ivar #, KFoldCV_5fold
    #test_cases = ParamOptGA, PlotNoAnalysis_verification, SingleFitGrouped_ivar, SingleFitGrouped_lwr, SingleFitGrouped_lwr60to100, KFoldCV_5fold, LeaveOutPercentCV_20, LeaveOutPercentCV_50, LeaveOutPercentCV_80, LeaveOutGroupCV_Alloy, LeaveOneOutCV

#if some test files have different configuration setting than AllTests, you can make changes by adding a
#separate section
[Test Parameters]

    [[PlotNoAnalysis_verification]]
    training_dataset=Expt IVAR
    testing_dataset=Expt IVAR, CD2 IVAR, CD2 LWR
    feature_plot_feature=log(fluence_n_cm2)
    xlabel = log$_{10}$(fluence/(n/cm$^{2}$))
    ylabel=$\Delta\sigma_{y}$ (MPa)
    data_labels=Expt IVAR, CD2 IVAR, CD2 LWR
    plot_filter_out=temperature_C;<>;290
    
    [[SingleFit_ivar]]
    training_dataset=Expt IVAR
    testing_dataset=Expt IVAR
    xlabel=Expt IVAR $\Delta\sigma_{y}$ (MPa)
    ylabel=Predicted $\Delta\sigma_{y}$ (MPa)

    [[SingleFitGrouped_ivar]]
    training_dataset=Expt IVAR
    testing_dataset=Expt IVAR
    xlabel=Expt IVAR $\Delta\sigma_{y}$ (MPa)
    ylabel=Predicted $\Delta\sigma_{y}$ (MPa)
    stepsize=200
    mark_outlying_groups = 3
    
    [[SingleFitGrouped_lwr]]
    training_dataset=CD2 IVAR
    testing_dataset=CD2 LWR
    xlabel=CD2 simulated LWR $\Delta\sigma_{y}$ (MPa)
    ylabel=Predicted $\Delta\sigma_{y}$ (MPa)
    stepsize=200
    mark_outlying_groups = 3
    
    [[SingleFitGrouped_lwr60to100]]
    training_dataset=CD2 IVAR
    testing_dataset=CD2 LWR
    xlabel=CD2 simulated LWR $\Delta\sigma_{y}$ (MPa)
    ylabel=Predicted $\Delta\sigma_{y}$ (MPa)
    stepsize=200
    mark_outlying_groups = 3
    plot_filter_out = time_sec;<;1892160000,time_sec;>;3153600000

    [[PredictionVsFeature_efffl]]
    training_dataset=CD2 IVAR
    testing_dataset=CD2 IVAR, CD2 LWR, CD2 LWR standard
    xlabel=CD2 simulated $\Delta\sigma_{y}$ (MPa)
    ylabel=Predicted $\Delta\sigma_{y}$ (MPa)
    stepsize=200
    feature_plot_xlabel = log Effective fluence (p=0.13)
    feature_plot_ylabel = $\Delta\sigma_{y}$ (MPa)
    feature_plot_feature = log(eff fl 100p=13)
    plot_filter_out = temperature_C;<>;290
    markers = +,s,o,*,None
    outlines = black, navy, red, blue, blue
    linestyles = None, None, None, None, -
    data_labels = CD2 IVAR, CD2 LWR, LWR standard
    legendloc = lower right
    sizes = 8,8,10,10,10

    [[KFoldCV_5fold]]
    training_dataset = Expt IVAR
    testing_dataset  = Expt IVAR
    xlabel = Measured (MPa)
    ylabel = Predicted (MPa)
    stepsize = 200
    num_folds = 5
    num_cvtests = 20
    fix_random_for_testing = 0
    mark_outlying_points = 0,3
    
    [[LeaveOutPercentCV_20]]
    training_dataset = CD2 IVAR
    testing_dataset  = CD2 IVAR
    xlabel = Measured (MPa)
    ylabel = Predicted (MPa)
    stepsize = 200
    mark_outlying_points = 0,3
    percent_leave_out = 20
    num_cvtests = 20
    fix_random_for_testing = 0

    [[LeaveOutPercentCV_50]]
    training_dataset = CD2 IVAR
    testing_dataset  = CD2 IVAR
    xlabel = Measured (MPa)
    ylabel = Predicted (MPa)
    stepsize = 200
    mark_outlying_points = 0,3
    percent_leave_out = 50
    num_cvtests = 20
    fix_random_for_testing = 0
    
    [[LeaveOutPercentCV_80]]
    training_dataset = CD2 IVAR
    testing_dataset  = CD2 IVAR
    xlabel = Measured (MPa)
    ylabel = Predicted (MPa)
    stepsize = 200
    mark_outlying_points = 0,3
    percent_leave_out = 80
    num_cvtests = 20
    fix_random_for_testing = 0
    
    [[LeaveOutGroupCV_Alloy]]
    training_dataset = CD2 IVAR
    testing_dataset  = CD2 IVAR
    xlabel = Alloy
    ylabel = RMSE (MPa)
    mark_outlying_points = 3
    
    [[LeaveOneOutCV]]
    training_dataset = CD2 IVAR
    testing_dataset  = CD2 IVAR
    xlabel = Measured
    ylabel = Predicted
    stepsize = 200
    mark_outlying_points = 3

    [[ParamOptGA]]
    training_dataset = CD2 IVAR
    testing_dataset = CD2 IVAR, CD2 LWR
    num_folds = 2  #todo: also allow percent_leave_out = 50 for example
    num_cvtests = 2 #20
    num_gas = 10 #3 #10
    population_size = 50
    convergence_generations = 3 #30
    max_generations = 10 #10 #200
    fix_random_for_testing = 0
    num_parents = 10
    use_multiprocessing = 0
    additional_feature_methods = DBTT.calculate_EffectiveFluence;1;flux_feature:flux_n_cm2_sec;fluence_feature:fluence_n_cm2

[Model Parameters]

    [[custom_model]]
    package_name = custom_models.DBTT_E900
    class_name = E900model
    wtP_feature = wt_percent_P
    wtNi_feature = wt_percent_Ni
    wtMn_feature = wt_percent_Mn
    wtCu_feature = wt_percent_Cu
    fluence_n_cm2_feature = fluence_n_cm2
    temp_C_feature = temperature_C
    product_id_feature = product_id

    [[linear_model]]
    fit_intercept = True

    [[decision_tree_model]]
    max_depth = 5
    min_samples_split = 2
    min_samples_leaf = 1
    split_criterion = mse

    [[gkrr_model]]
    alpha = 0.003019951720
    gamma = 3.467368504525
    coef0 = 1
    degree = 3
    kernel = rbf

    [[lkrr_model]]
    alpha = 0.00518
    gamma = 0.518
    kernel = laplacian

    [[randomforest_model]]
    split_criterion = mse
    estimators = 100
    max_depth = 5
    min_samples_split = 2
    min_samples_leaf = 1
    max_leaf_nodes = 2
    jobs = 1

    [[adaboost_model]]
    estimators = 275
    max_depth = 12
    min_samples_split = 2
    min_samples_leaf = 1
    learning rate = 1
    loss function = linear

    #minmax, size, transfer_function are the verbatim arguments for neurolab.net.newff()
    #training_algorithm is the verbatim 'support train fcn' for neurolab.train omitting 'train_'
    #see: https://pythonhosted.org/neurolab/lib.html#module-neurolab.net
    #epochs,show,goal are neurolab.net.train() arguments
    #see: https://pythonhosted.org/neurolab/lib.html#train-algorithms-based-gradients-algorithms
    #NOTE: minmax is verbose b/c [[0,1]]*9 will have bad pointers
    [[nn_model_neurolab]]
    #minmax = [[0, 1],[0, 1],[0, 1],[0, 1],[0, 1],[0, 1],[0, 1],[0, 1],[0, 1]]
    minmax = [0, 1], [0, 1], [0, 1]
    size = 11, 1
    transfer_function = TanSig
    training_algorithm = bfgs
    epochs = 5
    show = False
    goal = 0.01[default]
