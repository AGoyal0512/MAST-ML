# You run this with
# python3 -m mastml.mastml tests/conf/regression.conf tests/csv/boston_housing.csv -o results/regression

[GeneralSetup]
    #input_features = GGA_bandgap, GGA_O_pband_center
    #input_features = Auto
    #input_features = Coeficient of Thermal Expansion (10^-6 K-1)_AB_avg, Asite_HHIp_min, host_Bsite0_IsFCC, Asite_HHIp_weighted_avg
    input_features = Coeficient of Thermal Expansion (10^-6 K-1)_AB_avg, Asite_HHIp_min, host_Bsite0_IsFCC, Asite_HHIp_weighted_avg, BP (K)_AB_avg, Asite_Coeficient of Thermal Expansion (10^-6 K-1)_max, host_Bsite0_Group, Asite_Ionic Radius (angstroms)_range, Bsite_IsFCC_weighted_avg, MendeleevNumber_AB_avg, Asite_HHIr_min, Bsite_NUnfilled_weighted_avg, BCCenergy_pa_AB_avg, Bsite_Electronegativity_max, Asite_electrical conductivity_max, Asite_Coeficient of Thermal Expansion (10^-6 K-1)_weighted_avg, host_Bsite0_NUnfilled, Bsite_NUnfilled_min, Asite_GSenergy_pa_max, host_Bsite0_NdUnfilled, Heat of Vaporization_AB_avg
    #input_features = Coeficient of Thermal Expansion (10^-6 K-1)_AB_avg,Asite_HHIp_min, host_Bsite0_IsFCC     ,Asite_HHIp_weighted_avg     ,BP (K)_AB_avg    ,Asite_Coeficient of Thermal Expansion (10^-6 K-1)_max,host_Bsite0_Group     ,Asite_Ionic Radius (angstroms)_range   ,Bsite_IsFCC_weighted_avg     ,MendeleevNumber_AB_avg     ,Asite_HHIr_min     ,Bsite_NUnfilled_weighted_avg     ,BCCenergy_pa_AB_avg     ,Bsite_Electronegativity_max    ,Asite_electrical conductivity_max    ,Asite_Coeficient of Thermal Expansion (10^-6 K-1)_weighted_avg,host_Bsite0_NUnfilled     ,Bsite_NUnfilled_min     ,Asite_GSenergy_pa_max     ,host_Bsite0_NdUnfilled     ,Heat of Vaporization_AB_avg   ,Asite_ BP (K)_weighted_avg   ,Bsite_Group_max     ,Second_Ionization_Potential_AB_avg  ,At. Radius_(angstroms)_AB_avg   ,Asite_shannon_radii_range     ,Asite_BCCenergydiff_min     ,Asite_HHIr_weighted_avg     ,Bsite_Group_weighted_avg     ,Asite_ BP (K)_max   ,host_Bsite0_At. Radius (angstroms)   ,num_of_atoms_host_Asite0     ,Bsite_IsBCC_weighted_avg     ,HHIp_AB_avg     ,Bsite_NdUnfilled_weighted_avg     ,Bsite_NdValence_weighted_avg     ,BCCfermi_AB_ratio     ,Asite_NUnfilled_max     ,Bsite_Heat of Vaporization_weighted_avg   ,Asite_BCCenergy_pa_max     ,Asite_BCCvolume_pa_range     ,MendeleevNumber_AB_ratio     ,num_of_atoms_host_Bsite0     ,host_Bsite0_NdValence     ,Bsite_BCCvolume_pa_max     ,Bsite_IsFCC_max     ,Asite_IsRareEarth_max     ,BCCenergydiff_AB_diff     ,Asite_heat of fusion_min   ,GSenergy_pa_AB_avg
    target_feature = EnergyAboveHull
    randomizer = False
    learning_curve_model = SVR_learningcurve
    learning_curve_score = R2
    #validation_column = is_validation

[Clustering]
#    [[KMeans_5Clusters]]
#        n_clusters = 5

[FeatureGeneration]
    #[[Magpie]]
    #    composition_feature = MaterialComp

[FeatureNormalization]
    #[[DoNothing]]
    #[[MinMaxScaler]]
    #    feature_range = 0, 1
    #[[MeanStdevScaler]]
    #    mean = 0
    #    stdev = 1
    [[StandardScaler]]

[FeatureSelection]
    #[[VarianceThreshold]]
    #    threshold = 0
    #[[SelectKBest_k15]]
    #    k = 15
    #    score_func = f_regression
    #[[SelectKBest]]
    #    k = 20
    #[[SequentialFeatureSelector]]
    #    estimator = KernelRidge
    #    k_features = 20
    #[[PCA]]
    #    n_components = 10

[DataSplits]
    #[[NoSplit]]
    #[[KFold]]
    #    n_splits = 5
    #[[RepeatedKFold]]
    #    n_splits = 5
    #    n_repeats = 1
    #[[LeaveOneOut]]
    #[[LeaveOneGroupOut]]
    #    grouping_column = Is_Metal
    #[[LeaveOneGroupOut]]
    #    grouping_column = KMeans_5Clusters

[Models]
    #[[KNeighborsRegressor]]
    #[[GaussianProcessRegressor]]
    #[[KernelRidge]]
    #	alpha = 0.01456
	#	gamma = 0.00233
	#	coef0 = 1
	#	degree = 3
	#	kernel = rbf
    [[KernelRidge]]
    	alpha = 0.007
		gamma = 0.007
		kernel = rbf
    [[SVR_learningcurve]]
        kernel = linear

[PlotSettings]
    feature_learning_curve = True
    data_learning_curve = True
    target_histogram = True
    train_test_plots = True
    predicted_vs_true = True
    predicted_vs_true_bars = True
    best_worst_per_point = True
    feature_vs_target = True